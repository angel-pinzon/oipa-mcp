[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "oipa-mcp"
version = "1.0.0"
description = "MCP Server for Oracle OIPA (Insurance Policy Administration) integration"
readme = "README.md"
requires-python = ">=3.8"
license = {text = "MIT"}
authors = [
    {name = "OIPA MCP Team"}
]
keywords = [
    "mcp",
    "oipa", 
    "oracle",
    "insurance",
    "policy-administration",
    "integration"
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Office/Business :: Financial :: Investment"
]

dependencies = [
    "mcp>=1.0.0",
    "pydantic>=2.0.0",
    "aiohttp>=3.8.0",
    "cx-oracle>=8.3.0",
    "lxml>=4.9.0",
    "python-dotenv>=1.0.0",
    "loguru>=0.7.0",
    "asyncio-mqtt>=0.11.0",
    "jinja2>=3.1.0",
    "pyyaml>=6.0"
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0", 
    "pytest-mock>=3.10.0",
    "black>=23.0.0",
    "ruff>=0.1.0",
    "mypy>=1.5.0",
    "pre-commit>=3.0.0"
]

[project.urls]
Homepage = "https://github.com/your-org/oipa-mcp"
Documentation = "https://github.com/your-org/oipa-mcp/docs"
Repository = "https://github.com/your-org/oipa-mcp.git"
Issues = "https://github.com/your-org/oipa-mcp/issues"

[project.scripts]
oipa-mcp = "oipa_mcp.server:main"

[tool.hatch.build.targets.wheel]
packages = ["src/oipa_mcp"]

[tool.hatch.build.targets.sdist]
include = [
    "/src",
    "/tests",
    "/docs",
    "/config"
]

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.ruff]
target-version = "py38"
line-length = 88
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.mypy]
python_version = "3.8"
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_return_any = true

[[tool.mypy.overrides]]
module = "cx_Oracle.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "lxml.*"
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config", 
    "--disable-warnings"
]
asyncio_mode = "auto"
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests"
]
